//Efl.Ui.Popup Themes
group { "efl/popup";
   images.image: "rounded_square.png" COMP;
   parts {
      spacer { "base";
         desc { "default";
            rel1.offset: 10 10;
            rel2.offset: -11 -11;
         }
      }
      image { "bg";
         desc { "default";
            min: 100 100;
            image.border: 15 15 15 15;
            image.normal: "rounded_square.png";
         }
      }
      swallow { "efl.content";
         desc { "default";
            rel.to: "base";
         }
      }
   }
}

group { "efl/popup_alert";
   alias: "efl/popup_alert_scroll";
   alias: "efl/popup_alert_text";
   images.image: "rounded_square.png" COMP;
   parts {
      alias: "title" "efl.text.title";
      image { "bg";
         desc { "default";
            min: 100 100;
            image.border: 15 15 15 15;
            image.normal: "rounded_square.png";
          }
      }
      spacer { "base";
         desc { "default";
            rel.to: "bg";
            rel1.offset: 10 10;
            rel2.offset: -11 -11;
         }
      }
      rect { "title_bg";
         desc { "default";
            fixed: 0 1;
            min: 0 0;
            rel.to: "base";
            rel2.relative: 1.0 0.0;
            align: 0.5 0.0;
            color: 0 0 0 0;
         }
         desc { "title_visible";
            inherit: "default";
            min: 0 20;
         }
      }
      textblock { "efl.text.title";
         scale;
         desc { "default";
            fixed: 1 1;
            text {
              style: "popup_title_style_ellipsis";
            }
            rel.to: "title_bg";
            hid;
         }
         desc { "title_visible";
            inherit: "default";
            vis;
         }
      }
      swallow { "efl.buttons";
         desc { "default";
            fixed: 0 1;
            rel.to: "base";
            rel1.relative: 0.0 1.0;
            align: 0.5 1.0;
            min: 0 0;
         }
         desc { "button_visible";
            inherit: "default";
            min: 0 30;
         }
      }
      swallow { "efl.content";
         desc { "default";
            rel1.to_x: "base";
            rel1.to_y: "title_bg";
            rel2.to_x: "base";
            rel2.to_y: "efl.buttons";
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 0.0;
         }
      }
   }
   programs {
      program {
         signal: "efl,title,show"; source: "efl";
         action: STATE_SET "title_visible" 0.0;
         target: "title_bg";
         target: "efl.text.title";
      }
      program {
         signal: "efl,buttons,show"; source: "efl";
         action: STATE_SET "button_visible" 0.0;
         target: "efl.buttons";
      }
   }
}

group { "efl/popup_anchor";
   inherit: "efl/popup";
}

group { "efl/popup/backwall";
   alias: "efl/popup_alert/backwall";
   alias: "efl/popup_alert_scroll/backwall";
   alias: "efl/popup_alert_text/backwall";
   alias: "efl/popup_anchor/backwall";
   parts {
      rect { "base";
         desc { "default";
            color: 0 0 0 64;
         }
         desc { "content_visible";
            inherit: "default";
            hid;
         }
      }
      swallow { "efl.content";
         desc { "default";
            rel.to: "base";
            hid;
         }
         desc { "content_visible";
            inherit: "default";
            vis;
         }
      }
      rect { "block";
         desc { "default";
            rel.to: "base";
            color: 0 0 0 0;
         }
      }
   }

   programs {
      program {
         signal: "efl,state,content,set"; source: "efl";
         action: STATE_SET "content_visible" 0.0;
         target: "base";
         target: "efl.content";
      }
      program {
         signal: "efl,state,content,unset"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "efl.content";
      }
      program {
         signal: "mouse,clicked,1"; source: "block";
         action: SIGNAL_EMIT "efl,action,clicked" "efl";
      }
   }
}

group { "efl/popup_alert/button_layout1";
   alias: "efl/popup_alert_scroll/button_layout1";
   alias: "efl/popup_alert_text/button_layout1";
   parts {
      swallow { "efl.button1";
      }
   }
}

group { "efl/popup_alert/button_layout2";
   alias: "efl/popup_alert_scroll/button_layout2";
   alias: "efl/popup_alert_text/button_layout2";
   parts {
      spacer { "div1";
         desc { "default";
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            min: 5 5;
         }
      }
      swallow { "efl.button1";
         desc { "default";
            rel2.to_x: "div1";
            rel2.relative: 0.0 1.0;
         }
      }
      swallow { "efl.button2";
         desc { "default";
            rel1.to_x: "div1";
            rel1.relative: 1.0 0.0;
         }
      }
   }
}

group { "efl/popup_alert/button_layout3";
   alias: "efl/popup_alert_scroll/button_layout3";
   alias: "efl/popup_alert_text/button_layout3";
   parts {
      spacer { "div1";
         desc { "default";
            rel1.relative: 0.333 0.5;
            rel2.relative: 0.333 0.5;
            min: 5 5;
         }
      }
      spacer { "div2";
         desc { "default";
            rel1.relative: 0.666 0.5;
            rel2.relative: 0.666 0.5;
            min: 5 5;
         }
      }
      swallow { "efl.button1";
         desc { "default";
            rel2.to_x: "div1";
            rel2.relative: 0.0 1.0;
         }
      }
      swallow { "efl.button2";
         desc { "default";
            rel1.to_x: "div1";
            rel2.to_x: "div2";
            rel1.relative: 1.0 0.0;
            rel2.relative: 0.0 1.0;
         }
      }
      swallow { "efl.button3";
         desc { "default";
            rel1.to_x: "div2";
            rel1.relative: 1.0 0.0;
         }
      }
   }
}

group { "efl/popup_alert/button";
   inherit: "efl/button";
   alias: "efl/popup_alert_scroll/button";
   alias: "efl/popup_alert_text/button";
}

group { "efl/popup_alert_scroll/scroller";
   inherit: "efl/scroller";
   alias: "efl/popup_alert_text/scroller";
   parts {
       swallow { "efl.content";
         desc { "default";
            rel1.offset: 0 0;
            rel2.offset: 0 0;
         }
      }
      spacer { "inset";
         desc { "default";
            hid;
         }
      }
      spacer { "shadow";
         desc { "default";
            hid;
         }
      }
   }
}

group { "efl/popup_alert_text/text";
   inherit: "efl/text";
}
